name: macos

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# env:
#   # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
#   BUILD_TYPE: Release

jobs:
  build:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2

      # - uses: Homebrew/actions/setup-homebrew@master

      - name: Install deps
        run: |
          source ./util/ci/common.sh
          install_macos_deps

#       - name: Build
#         run: |
#           ./util/ci/build.sh

#       - name: Test
#         run: |
#           ./bin/minetest --run-unittests

      - name: Build
        run: |
          mkdir cmakebuild
          mkdir -p artifact/minetest/usr/
          cd cmakebuild
          cmake -DCMAKE_INSTALL_PREFIX=../artifact/minetest/usr/ \
            -DCMAKE_BUILD_TYPE=Release -DRUN_IN_PLACE=FALSE \
            -DENABLE_FREETYPE=TRUE -DENABLE_GETTEXT=TRUE \
            -DBUILD_CLIENT=TRUE -DBUILD_SERVER=FALSE ..
          make -j2
          make install
          # make package
          # unzip minetest-*-osx.zip
          # mv minetest.app ..

#       - uses: actions/upload-artifact@v2
#         with:
#           name: minetest-macos
#           path: ./minetest.app

      - uses: actions/upload-artifact@v2
        with:
          name: minetest-macos
          path: ./artifact/*

#       - name: Configure CMake
#         # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
#         # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
#         run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

#       - name: Build
#         # Build your program with the given configuration
#         run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

#       - name: Test
#         working-directory: ${{github.workspace}}/build
#         # Execute tests defined by the CMake configuration.  
#         # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#         run: ctest -C ${{env.BUILD_TYPE}}
      
